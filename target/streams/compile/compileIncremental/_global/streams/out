[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 60 products, 29 sources, 4 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/Pipeline/UNits/BRANCH.scala, ${BASE}/src/main/scala/Pipeline/Pipelines/ID_EX.scala, ${BASE}/src/main/scala/Pipeline/UNits/PC.scala, ${BASE}/src/main/scala/fft/FFT.scala, ${BASE}/src/main/scala/HazardDetection.scala, ${BASE}/src/main/scala/Pipeline/Pipelines/MEM_WB.scala, ${BASE}/src/main/scala/fft/FFTPipeline.scala, ${BASE}/src/main/scala/Pipeline/Hazard Units/HazardDetection.scala, ${BASE}/src/main/scala/Pipeline/UNits/JALR.scala, ${BASE}/src/main/scala/Pipeline/UNits/Alu.scala, ${BASE}/src/main/scala/Pipeline/Hazard Units/StructuralHazard.scala, ${BASE}/src/main/scala/BExtension.scala, ${BASE}/src/main/scala/fft/ComplexNum.scala, ${BASE}/src/main/scala/gcd/GCD.scala, ${BASE}/src/main/scala/Pipeline/UNits/Control.scala, ${BASE}/src/main/scala/Pipeline/Main.scala, ${BASE}/src/main/scala/Pipeline/UNits/ImmGenerator.scala, ${BASE}/src/main/scala/Pipeline/Pipelines/EX_MEM.scala, ${BASE}/src/main/scala/Pipeline/Hazard Units/BranchForward.scala, ${BASE}/src/main/scala/Pipeline/Hazard Units/Forwarding.scala, ${BASE}/src/main/scala/gcd/DecoupledGCD.scala, ${BASE}/src/main/scala/Pipeline/Memory/DataMemory.scala, ${BASE}/src/main/scala/Pipeline/UNits/PC4.scala, ${BASE}/src/main/scala/Pipeline/UNits/Alu_Control.scala, ${BASE}/src/main/scala/Pipeline/UNits/RegisterFile.scala, ${BASE}/src/main/scala/Pipeline/Memory/InstMem.scala, ${BASE}/src/main/scala/ForwardingUnit.scala, ${BASE}/src/main/scala/Pipeline/Pipelines/IF_ID.scala, ${BASE}/src/main/scala/fft/IFFT.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/src/main/scala/ForwardingUnit.scala, ${BASE}/src/main/scala/HazardDetection.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/ForwardingUnit.scala, ${BASE}/src/main/scala/HazardDetection.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(ForwardingUnit, ForwardingUnitIO, HazardDetectionIO, HazardDetection)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(ForwardingUnit, ForwardingUnitIO, HazardDetectionIO, HazardDetection)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/ForwardingUnit.scala, ${BASE}/src/main/scala/HazardDetection.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: ForwardingUnit, ForwardingUnitIO, HazardDetectionIO, HazardDetection[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 2 Scala sources to /home/cans/5-stage-RV32I/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.4.4:compile for Scala 2.12.13[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 20331b43 for Scala compiler version 2.12.13[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-encoding[0m
[0m[[0m[0mdebug[0m] [0m[0m	UTF-8[0m
[0m[[0m[0mdebug[0m] [0m[0m	-feature[0m
[0m[[0m[0mdebug[0m] [0m[0m	-unchecked[0m
[0m[[0m[0mdebug[0m] [0m[0m	-language:reflectiveCalls[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-plugin_2.12.13/3.5.6/chisel3-plugin_2.12.13-3.5.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.13/scala-library-2.12.13.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/cans/5-stage-RV32I/target/scala-2.12/classes:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3_2.12/3.5.6/chisel3_2.12-3.5.6.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chiseltest_2.12/0.5.6/chiseltest_2.12-0.5.6.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.12.13/scala-reflect-2.12.13.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/scopt/scopt_2.12/3.7.1/scopt_2.12-3.7.1.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel-iotesters_2.12/2.5.6/chisel-iotesters_2.12-2.5.6.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/fusesource/jansi/jansi/1.11/jansi-1.11.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-macros_2.12/3.5.6/chisel3-macros_2.12-3.5.6.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-core_2.12/3.5.6/chisel3-core_2.12-3.5.6.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/os-lib_2.12/0.8.0/os-lib_2.12-0.8.0.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/treadle_2.12/1.5.6/treadle_2.12-1.5.6.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalatest/scalatest_2.12/3.1.4/scalatest_2.12-3.1.4.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/utest_2.12/0.7.9/utest_2.12-0.7.9.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/firrtl_2.12/1.5.6/firrtl_2.12-1.5.6.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/firrtl-interpreter_2.12/1.5.6/firrtl-interpreter_2.12-1.5.6.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/junit/junit/4.13/junit-4.13.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalatestplus/scalacheck-1-14_2.12/3.1.1.1/scalacheck-1-14_2.12-3.1.1.1.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalacheck/scalacheck_2.12/1.14.3/scalacheck_2.12-1.14.3.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/geny_2.12/0.7.0/geny_2.12-0.7.0.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-jline/2.12.1/scala-jline-2.12.1.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalactic/scalactic_2.12/3.1.4/scalactic_2.12-3.1.4.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.12/1.2.0/scala-xml_2.12-1.2.0.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/portable-scala/portable-scala-reflect_2.12/0.1.1/portable-scala-reflect_2.12-0.1.1.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/antlr/antlr4-runtime/4.9.3/antlr4-runtime-4.9.3.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/protobuf/protobuf-java/3.18.2/protobuf-java-3.18.2.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/net/jcazevedo/moultingyaml_2.12/0.4.2/moultingyaml_2.12-0.4.2.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-native_2.12/3.6.12/json4s-native_2.12-3.6.12.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-text/1.9/commons-text-1.9.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/io/github/alexarchambault/data-class_2.12/0.2.5/data-class_2.12-0.2.5.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/nscala-time/nscala-time_2.12/2.22.0/nscala-time_2.12-2.22.0.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-core_2.12/3.6.12/json4s-core_2.12-3.6.12.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.11/commons-lang3-3.11.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/joda-time/joda-time/2.10.1/joda-time-2.10.1.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/joda/joda-convert/2.2.0/joda-convert-2.2.0.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-ast_2.12/3.6.12/json4s-ast_2.12-3.6.12.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-scalap_2.12/3.6.12/json4s-scalap_2.12-3.6.12.jar:/home/cans/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ForwardingUnitIO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: ForwardingUnitIO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ForwardingUnitIO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ForwardingUnitIO,ModifiedNames(changes = UsedName(toString,[Default]), UsedName(mem_wb_rd,[Default]), UsedName(asUInt,[Default]), UsedName(parentNameOpt,[Default]), UsedName(eq,[Default]), UsedName(hasSeed,[Default]), UsedName(forwardA,[Default]), UsedName(specifiedDirection,[Default]), UsedName(bind,[Default]), UsedName(instanceName,[Default]), UsedName(getWidth,[Default]), UsedName(ne,[Default]), UsedName(forwardB,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_id,[Default]), UsedName(notify,[Default]), UsedName(badConnect,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(topBinding,[Default]), UsedName(forceName,[Default]), UsedName(isSynthesizable,[Default]), UsedName(setRef$default$3,[Default]), UsedName(topBindingOpt,[Default]), UsedName(_errorContext,[Default]), UsedName(compileOptions,[Implicit]), UsedName(parentPathName,[Default]), UsedName(ref,[Default]), UsedName(_usingPlugin,[Default]), UsedName(isInstanceOf,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(widthOption,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(setAllParents,[Default]), UsedName(legacyConnect,[Default]), UsedName(id_ex_rs2,[Default]), UsedName(getElements,[Default]), UsedName(direction_=,[Default]), UsedName(<>,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(reifyTarget,[Default]), UsedName(_circuit,[Default]), UsedName(finalize,[Default]), UsedName(_circuit_=,[Default]), UsedName(_parent,[Default]), UsedName(bind$default$2,[Default]), UsedName(do_asUInt,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(getPublicFields,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(bindingToString,[Default]), UsedName(allElements,[Default]), UsedName(typeEquivalent,[Default]), UsedName(ex_mem_rd,[Default]), UsedName(clone,[Default]), UsedName(ignoreSeq,[Default]), UsedName(_onModuleClose,[Default]), UsedName(litOption,[Default]), UsedName(circuitName,[Default]), UsedName(mem_wb_regwrite,[Default]), UsedName(getRef,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(asInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(notifyAll,[Default]), UsedName(_makeLit,[Default]), UsedName(:=,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName($init$,[Default]), UsedName(direction,[Default]), UsedName(id_ex_rs1,[Default]), UsedName(isLit,[Default]), UsedName(elements,[Default]), UsedName(ex_mem_regwrite,[Default]), UsedName(toPrintable,[Default]), UsedName(flatten,[Default]), UsedName(do_asTypeOf,[Default]), UsedName(binding_=,[Default]), UsedName(_computeName,[Default]), UsedName(parentModName,[Default]), UsedName(==,[Default]), UsedName(setRef,[Default]), UsedName(connect,[Default]), UsedName(ForwardingUnitIO,[Default]), UsedName(forceFinalName,[Default]), UsedName(_bindingToString,[Default]), UsedName(_parent_=,[Default]), UsedName(className,[Default]), UsedName(ForwardingUnitIO;init;,[Default]), UsedName(!=,[Default]), UsedName(connectFromBits,[Default]), UsedName(equals,[Default]), UsedName(requireVisible,[Default]), UsedName(reifyParent,[Default]), UsedName(asTypeOf,[Default]), UsedName(litValue,[Default]), UsedName(earlyName,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(binding,[Default]), UsedName(hashCode,[Default]), UsedName(pathName,[Default]), UsedName(cloneType,[Default]), UsedName(seedOpt,[Default]), UsedName(getOptionRef,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_isOpaqueType,[Default]), UsedName(lref,[Default]), UsedName(toTarget,[Default]), UsedName(synchronized,[Default]), UsedName(_elementsImpl,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(##,[Default]), UsedName(suggestName,[Default]), UsedName(width,[Default]), UsedName(elementsIterator,[Default]), UsedName(bulkConnect,[Default]), UsedName(stringAccessor,[Default]))) invalidates 1 classes due to The ForwardingUnitIO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(ForwardingUnitIO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from rv32i.core.HazardDetectionUnit...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: rv32i.core.HazardDetectionUnit[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(rv32i.core.HazardDetectionUnit)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(rv32i.core.HazardDetectionUnit,ModifiedNames(changes = UsedName(toString,[Default]), UsedName(_closed,[Default]), UsedName(override_reset_=,[Default]), UsedName(namePorts,[Default]), UsedName(eq,[Default]), UsedName(hasSeed,[Default]), UsedName(rs1_decode,[Default]), UsedName(instanceName,[Default]), UsedName(desiredName,[Default]), UsedName(stall_pc,[Default]), UsedName(ne,[Default]), UsedName(getTarget,[Default]), UsedName(_id,[Default]), UsedName(notify,[Default]), UsedName(compileOptions,[Default]), UsedName(generateComponent,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(forceName,[Default]), UsedName(control_flush,[Default]), UsedName(setRef$default$3,[Default]), UsedName(_errorContext,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(override_clock_=,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(getChiselPorts,[Default]), UsedName(_lastId,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(reifyTarget,[Default]), UsedName(_circuit,[Default]), UsedName(finalize,[Default]), UsedName(_circuit_=,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_parent,[Default]), UsedName(HazardDetectionUnit,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsContains,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(clone,[Default]), UsedName(_onModuleClose,[Default]), UsedName(circuitName,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(getRef,[Default]), UsedName(getModulePorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(rs2_decode,[Default]), UsedName(autoSeed,[Default]), UsedName(notifyAll,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getPorts,[Default]), UsedName($init$,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(mem_read_ex,[Default]), UsedName(mkReset,[Default]), UsedName(addCommand,[Default]), UsedName(isClosed,[Default]), UsedName(_computeName,[Default]), UsedName(parentModName,[Default]), UsedName(==,[Default]), UsedName(setRef,[Default]), UsedName(getCommands,[Default]), UsedName(override_reset,[Default]), UsedName(forceFinalName,[Default]), UsedName(_parent_=,[Default]), UsedName(initializeInParent,[Default]), UsedName(getIds,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(findPort,[Default]), UsedName(IO,[Default]), UsedName(rd_ex,[Default]), UsedName(stall_if_id,[Default]), UsedName(portsSize,[Default]), UsedName(reifyParent,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(hashCode,[Default]), UsedName(nameIds,[Default]), UsedName(pathName,[Default]), UsedName(override_clock,[Default]), UsedName(seedOpt,[Default]), UsedName(getOptionRef,[Default]), UsedName(_component,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(toTarget,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(addId,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(_namespace,[Default]), UsedName(##,[Default]), UsedName(suggestName,[Default]), UsedName(name,[Default]), UsedName(rv32i;core;HazardDetectionUnit;init;,[Default]))) invalidates 1 classes due to The rv32i.core.HazardDetectionUnit has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]), UsedName(_closed,[Default]), UsedName(override_reset_=,[Default]), UsedName(namePorts,[Default]), UsedName(eq,[Default]), UsedName(hasSeed,[Default]), UsedName(rs1_decode,[Default]), UsedName(instanceName,[Default]), UsedName(desiredName,[Default]), UsedName(stall_pc,[Default]), UsedName(ne,[Default]), UsedName(getTarget,[Default]), UsedName(_id,[Default]), UsedName(notify,[Default]), UsedName(compileOptions,[Default]), UsedName(generateComponent,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(forceName,[Default]), UsedName(control_flush,[Default]), UsedName(setRef$default$3,[Default]), UsedName(_errorContext,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(override_clock_=,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(getChiselPorts,[Default]), UsedName(_lastId,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(reifyTarget,[Default]), UsedName(_circuit,[Default]), UsedName(finalize,[Default]), UsedName(_circuit_=,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_parent,[Default]), UsedName(HazardDetectionUnit,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsContains,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(clone,[Default]), UsedName(_onModuleClose,[Default]), UsedName(circuitName,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(getRef,[Default]), UsedName(getModulePorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(rs2_decode,[Default]), UsedName(autoSeed,[Default]), UsedName(notifyAll,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getPorts,[Default]), UsedName($init$,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(mem_read_ex,[Default]), UsedName(mkReset,[Default]), UsedName(addCommand,[Default]), UsedName(isClosed,[Default]), UsedName(_computeName,[Default]), UsedName(parentModName,[Default]), UsedName(==,[Default]), UsedName(setRef,[Default]), UsedName(getCommands,[Default]), UsedName(override_reset,[Default]), UsedName(forceFinalName,[Default]), UsedName(_parent_=,[Default]), UsedName(initializeInParent,[Default]), UsedName(getIds,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(findPort,[Default]), UsedName(IO,[Default]), UsedName(rd_ex,[Default]), UsedName(stall_if_id,[Default]), UsedName(portsSize,[Default]), UsedName(reifyParent,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(hashCode,[Default]), UsedName(nameIds,[Default]), UsedName(pathName,[Default]), UsedName(override_clock,[Default]), UsedName(seedOpt,[Default]), UsedName(getOptionRef,[Default]), UsedName(_component,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(toTarget,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(addId,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(_namespace,[Default]), UsedName(##,[Default]), UsedName(suggestName,[Default]), UsedName(name,[Default]), UsedName(rv32i;core;HazardDetectionUnit;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(rv32i.core.HazardDetectionUnit)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from HazardDetectionIO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: HazardDetectionIO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(HazardDetectionIO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(HazardDetectionIO,ModifiedNames(changes = UsedName(toString,[Default]), UsedName(asUInt,[Default]), UsedName(parentNameOpt,[Default]), UsedName(eq,[Default]), UsedName(id_rs1,[Default]), UsedName(hasSeed,[Default]), UsedName(specifiedDirection,[Default]), UsedName(bind,[Default]), UsedName(instanceName,[Default]), UsedName(getWidth,[Default]), UsedName(ne,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_id,[Default]), UsedName(notify,[Default]), UsedName(badConnect,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(topBinding,[Default]), UsedName(forceName,[Default]), UsedName(isSynthesizable,[Default]), UsedName(pc_write,[Default]), UsedName(setRef$default$3,[Default]), UsedName(topBindingOpt,[Default]), UsedName(_errorContext,[Default]), UsedName(compileOptions,[Implicit]), UsedName(parentPathName,[Default]), UsedName(ref,[Default]), UsedName(_usingPlugin,[Default]), UsedName(isInstanceOf,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(widthOption,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(setAllParents,[Default]), UsedName(legacyConnect,[Default]), UsedName(getElements,[Default]), UsedName(direction_=,[Default]), UsedName(<>,[Default]), UsedName(HazardDetectionIO;init;,[Default]), UsedName(getClass,[Default]), UsedName(if_id_write,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(reifyTarget,[Default]), UsedName(_circuit,[Default]), UsedName(finalize,[Default]), UsedName(_circuit_=,[Default]), UsedName(_parent,[Default]), UsedName(bind$default$2,[Default]), UsedName(do_asUInt,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(id_rs2,[Default]), UsedName(getPublicFields,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(bindingToString,[Default]), UsedName(allElements,[Default]), UsedName(ex_memread,[Default]), UsedName(typeEquivalent,[Default]), UsedName(clone,[Default]), UsedName(ignoreSeq,[Default]), UsedName(_onModuleClose,[Default]), UsedName(litOption,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(asInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(notifyAll,[Default]), UsedName(_makeLit,[Default]), UsedName(:=,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName($init$,[Default]), UsedName(direction,[Default]), UsedName(ex_rd,[Default]), UsedName(isLit,[Default]), UsedName(elements,[Default]), UsedName(toPrintable,[Default]), UsedName(flatten,[Default]), UsedName(do_asTypeOf,[Default]), UsedName(binding_=,[Default]), UsedName(_computeName,[Default]), UsedName(parentModName,[Default]), UsedName(==,[Default]), UsedName(setRef,[Default]), UsedName(connect,[Default]), UsedName(forceFinalName,[Default]), UsedName(_bindingToString,[Default]), UsedName(_parent_=,[Default]), UsedName(className,[Default]), UsedName(HazardDetectionIO,[Default]), UsedName(!=,[Default]), UsedName(connectFromBits,[Default]), UsedName(equals,[Default]), UsedName(requireVisible,[Default]), UsedName(reifyParent,[Default]), UsedName(asTypeOf,[Default]), UsedName(litValue,[Default]), UsedName(earlyName,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(binding,[Default]), UsedName(hashCode,[Default]), UsedName(pathName,[Default]), UsedName(cloneType,[Default]), UsedName(seedOpt,[Default]), UsedName(getOptionRef,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_isOpaqueType,[Default]), UsedName(lref,[Default]), UsedName(toTarget,[Default]), UsedName(stall,[Default]), UsedName(synchronized,[Default]), UsedName(_elementsImpl,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(##,[Default]), UsedName(suggestName,[Default]), UsedName(width,[Default]), UsedName(elementsIterator,[Default]), UsedName(bulkConnect,[Default]), UsedName(stringAccessor,[Default]))) invalidates 1 classes due to The HazardDetectionIO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(HazardDetectionIO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ForwardingUnit...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: ForwardingUnit[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ForwardingUnit)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ForwardingUnit,ModifiedNames(changes = UsedName(toString,[Default]), UsedName(_closed,[Default]), UsedName(override_reset_=,[Default]), UsedName(namePorts,[Default]), UsedName(eq,[Default]), UsedName(hasSeed,[Default]), UsedName(instanceName,[Default]), UsedName(desiredName,[Default]), UsedName(ForwardingUnit;init;,[Default]), UsedName(ne,[Default]), UsedName(getTarget,[Default]), UsedName(_id,[Default]), UsedName(notify,[Default]), UsedName(compileOptions,[Default]), UsedName(generateComponent,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(forceName,[Default]), UsedName(setRef$default$3,[Default]), UsedName(_errorContext,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(override_clock_=,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(getChiselPorts,[Default]), UsedName(_lastId,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(reifyTarget,[Default]), UsedName(_circuit,[Default]), UsedName(finalize,[Default]), UsedName(_circuit_=,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_parent,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsContains,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(clone,[Default]), UsedName(_onModuleClose,[Default]), UsedName(circuitName,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(getRef,[Default]), UsedName(getModulePorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(notifyAll,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getPorts,[Default]), UsedName($init$,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(mkReset,[Default]), UsedName(addCommand,[Default]), UsedName(isClosed,[Default]), UsedName(_computeName,[Default]), UsedName(parentModName,[Default]), UsedName(==,[Default]), UsedName(setRef,[Default]), UsedName(getCommands,[Default]), UsedName(override_reset,[Default]), UsedName(forceFinalName,[Default]), UsedName(_parent_=,[Default]), UsedName(initializeInParent,[Default]), UsedName(getIds,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(findPort,[Default]), UsedName(IO,[Default]), UsedName(ForwardingUnit,[Default]), UsedName(portsSize,[Default]), UsedName(reifyParent,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(hashCode,[Default]), UsedName(nameIds,[Default]), UsedName(pathName,[Default]), UsedName(override_clock,[Default]), UsedName(seedOpt,[Default]), UsedName(getOptionRef,[Default]), UsedName(_component,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(toTarget,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(addId,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(_namespace,[Default]), UsedName(##,[Default]), UsedName(suggestName,[Default]), UsedName(name,[Default]))) invalidates 1 classes due to The ForwardingUnit has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]), UsedName(_closed,[Default]), UsedName(override_reset_=,[Default]), UsedName(namePorts,[Default]), UsedName(eq,[Default]), UsedName(hasSeed,[Default]), UsedName(instanceName,[Default]), UsedName(desiredName,[Default]), UsedName(ForwardingUnit;init;,[Default]), UsedName(ne,[Default]), UsedName(getTarget,[Default]), UsedName(_id,[Default]), UsedName(notify,[Default]), UsedName(compileOptions,[Default]), UsedName(generateComponent,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(forceName,[Default]), UsedName(setRef$default$3,[Default]), UsedName(_errorContext,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(override_clock_=,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(getChiselPorts,[Default]), UsedName(_lastId,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(reifyTarget,[Default]), UsedName(_circuit,[Default]), UsedName(finalize,[Default]), UsedName(_circuit_=,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_parent,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsContains,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(clone,[Default]), UsedName(_onModuleClose,[Default]), UsedName(circuitName,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(getRef,[Default]), UsedName(getModulePorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(notifyAll,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getPorts,[Default]), UsedName($init$,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(mkReset,[Default]), UsedName(addCommand,[Default]), UsedName(isClosed,[Default]), UsedName(_computeName,[Default]), UsedName(parentModName,[Default]), UsedName(==,[Default]), UsedName(setRef,[Default]), UsedName(getCommands,[Default]), UsedName(override_reset,[Default]), UsedName(forceFinalName,[Default]), UsedName(_parent_=,[Default]), UsedName(initializeInParent,[Default]), UsedName(getIds,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(findPort,[Default]), UsedName(IO,[Default]), UsedName(ForwardingUnit,[Default]), UsedName(portsSize,[Default]), UsedName(reifyParent,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(hashCode,[Default]), UsedName(nameIds,[Default]), UsedName(pathName,[Default]), UsedName(override_clock,[Default]), UsedName(seedOpt,[Default]), UsedName(getOptionRef,[Default]), UsedName(_component,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(toTarget,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(addId,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(_namespace,[Default]), UsedName(##,[Default]), UsedName(suggestName,[Default]), UsedName(name,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(ForwardingUnit)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from HazardDetection...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: HazardDetection[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(HazardDetection)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(HazardDetection,ModifiedNames(changes = UsedName(toString,[Default]), UsedName(_closed,[Default]), UsedName(override_reset_=,[Default]), UsedName(HazardDetection;init;,[Default]), UsedName(HazardDetection,[Default]), UsedName(namePorts,[Default]), UsedName(eq,[Default]), UsedName(hasSeed,[Default]), UsedName(instanceName,[Default]), UsedName(desiredName,[Default]), UsedName(ne,[Default]), UsedName(getTarget,[Default]), UsedName(_id,[Default]), UsedName(notify,[Default]), UsedName(compileOptions,[Default]), UsedName(generateComponent,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(forceName,[Default]), UsedName(setRef$default$3,[Default]), UsedName(_errorContext,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(override_clock_=,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(getChiselPorts,[Default]), UsedName(_lastId,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(reifyTarget,[Default]), UsedName(_circuit,[Default]), UsedName(finalize,[Default]), UsedName(_circuit_=,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_parent,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsContains,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(clone,[Default]), UsedName(_onModuleClose,[Default]), UsedName(circuitName,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(getRef,[Default]), UsedName(getModulePorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(notifyAll,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getPorts,[Default]), UsedName($init$,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(mkReset,[Default]), UsedName(addCommand,[Default]), UsedName(isClosed,[Default]), UsedName(_computeName,[Default]), UsedName(parentModName,[Default]), UsedName(==,[Default]), UsedName(setRef,[Default]), UsedName(getCommands,[Default]), UsedName(override_reset,[Default]), UsedName(forceFinalName,[Default]), UsedName(_parent_=,[Default]), UsedName(initializeInParent,[Default]), UsedName(getIds,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(findPort,[Default]), UsedName(IO,[Default]), UsedName(portsSize,[Default]), UsedName(reifyParent,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(hashCode,[Default]), UsedName(nameIds,[Default]), UsedName(pathName,[Default]), UsedName(override_clock,[Default]), UsedName(seedOpt,[Default]), UsedName(getOptionRef,[Default]), UsedName(_component,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(toTarget,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(addId,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(_namespace,[Default]), UsedName(##,[Default]), UsedName(suggestName,[Default]), UsedName(name,[Default]))) invalidates 1 classes due to The HazardDetection has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]), UsedName(_closed,[Default]), UsedName(override_reset_=,[Default]), UsedName(HazardDetection;init;,[Default]), UsedName(HazardDetection,[Default]), UsedName(namePorts,[Default]), UsedName(eq,[Default]), UsedName(hasSeed,[Default]), UsedName(instanceName,[Default]), UsedName(desiredName,[Default]), UsedName(ne,[Default]), UsedName(getTarget,[Default]), UsedName(_id,[Default]), UsedName(notify,[Default]), UsedName(compileOptions,[Default]), UsedName(generateComponent,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(forceName,[Default]), UsedName(setRef$default$3,[Default]), UsedName(_errorContext,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(override_clock_=,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(getChiselPorts,[Default]), UsedName(_lastId,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(reifyTarget,[Default]), UsedName(_circuit,[Default]), UsedName(finalize,[Default]), UsedName(_circuit_=,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_parent,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsContains,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(clone,[Default]), UsedName(_onModuleClose,[Default]), UsedName(circuitName,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(getRef,[Default]), UsedName(getModulePorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(notifyAll,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getPorts,[Default]), UsedName($init$,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(mkReset,[Default]), UsedName(addCommand,[Default]), UsedName(isClosed,[Default]), UsedName(_computeName,[Default]), UsedName(parentModName,[Default]), UsedName(==,[Default]), UsedName(setRef,[Default]), UsedName(getCommands,[Default]), UsedName(override_reset,[Default]), UsedName(forceFinalName,[Default]), UsedName(_parent_=,[Default]), UsedName(initializeInParent,[Default]), UsedName(getIds,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(findPort,[Default]), UsedName(IO,[Default]), UsedName(portsSize,[Default]), UsedName(reifyParent,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(hashCode,[Default]), UsedName(nameIds,[Default]), UsedName(pathName,[Default]), UsedName(override_clock,[Default]), UsedName(seedOpt,[Default]), UsedName(getOptionRef,[Default]), UsedName(_component,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(toTarget,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(addId,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(_namespace,[Default]), UsedName(##,[Default]), UsedName(suggestName,[Default]), UsedName(name,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(HazardDetection)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from rv32i.core.ForwardingUnit...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: rv32i.core.ForwardingUnit[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(rv32i.core.ForwardingUnit)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(rv32i.core.ForwardingUnit,ModifiedNames(changes = UsedName(toString,[Default]), UsedName(_closed,[Default]), UsedName(override_reset_=,[Default]), UsedName(namePorts,[Default]), UsedName(eq,[Default]), UsedName(hasSeed,[Default]), UsedName(instanceName,[Default]), UsedName(desiredName,[Default]), UsedName(ne,[Default]), UsedName(getTarget,[Default]), UsedName(_id,[Default]), UsedName(notify,[Default]), UsedName(compileOptions,[Default]), UsedName(generateComponent,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(rs2_ex,[Default]), UsedName(forceName,[Default]), UsedName(rv32i;core;ForwardingUnit;init;,[Default]), UsedName(setRef$default$3,[Default]), UsedName(_errorContext,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(reg_write_wb,[Default]), UsedName(override_clock_=,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(getChiselPorts,[Default]), UsedName(_lastId,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(reifyTarget,[Default]), UsedName(_circuit,[Default]), UsedName(finalize,[Default]), UsedName(_circuit_=,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_parent,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsContains,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(clone,[Default]), UsedName(_onModuleClose,[Default]), UsedName(circuitName,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(getRef,[Default]), UsedName(getModulePorts,[Default]), UsedName(rd_wb,[Default]), UsedName(asInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(notifyAll,[Default]), UsedName(forward_b,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(reg_write_mem,[Default]), UsedName(getPorts,[Default]), UsedName($init$,[Default]), UsedName(forward_a,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(mkReset,[Default]), UsedName(addCommand,[Default]), UsedName(isClosed,[Default]), UsedName(_computeName,[Default]), UsedName(parentModName,[Default]), UsedName(==,[Default]), UsedName(setRef,[Default]), UsedName(getCommands,[Default]), UsedName(override_reset,[Default]), UsedName(rs1_ex,[Default]), UsedName(forceFinalName,[Default]), UsedName(_parent_=,[Default]), UsedName(initializeInParent,[Default]), UsedName(getIds,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(findPort,[Default]), UsedName(IO,[Default]), UsedName(ForwardingUnit,[Default]), UsedName(portsSize,[Default]), UsedName(reifyParent,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(hashCode,[Default]), UsedName(nameIds,[Default]), UsedName(rd_mem,[Default]), UsedName(pathName,[Default]), UsedName(override_clock,[Default]), UsedName(seedOpt,[Default]), UsedName(getOptionRef,[Default]), UsedName(_component,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(toTarget,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(addId,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(_namespace,[Default]), UsedName(##,[Default]), UsedName(suggestName,[Default]), UsedName(name,[Default]))) invalidates 1 classes due to The rv32i.core.ForwardingUnit has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]), UsedName(_closed,[Default]), UsedName(override_reset_=,[Default]), UsedName(namePorts,[Default]), UsedName(eq,[Default]), UsedName(hasSeed,[Default]), UsedName(instanceName,[Default]), UsedName(desiredName,[Default]), UsedName(ne,[Default]), UsedName(getTarget,[Default]), UsedName(_id,[Default]), UsedName(notify,[Default]), UsedName(compileOptions,[Default]), UsedName(generateComponent,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(rs2_ex,[Default]), UsedName(forceName,[Default]), UsedName(rv32i;core;ForwardingUnit;init;,[Default]), UsedName(setRef$default$3,[Default]), UsedName(_errorContext,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(reg_write_wb,[Default]), UsedName(override_clock_=,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(getChiselPorts,[Default]), UsedName(_lastId,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(reifyTarget,[Default]), UsedName(_circuit,[Default]), UsedName(finalize,[Default]), UsedName(_circuit_=,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_parent,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsContains,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(clone,[Default]), UsedName(_onModuleClose,[Default]), UsedName(circuitName,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(getRef,[Default]), UsedName(getModulePorts,[Default]), UsedName(rd_wb,[Default]), UsedName(asInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(notifyAll,[Default]), UsedName(forward_b,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(reg_write_mem,[Default]), UsedName(getPorts,[Default]), UsedName($init$,[Default]), UsedName(forward_a,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(mkReset,[Default]), UsedName(addCommand,[Default]), UsedName(isClosed,[Default]), UsedName(_computeName,[Default]), UsedName(parentModName,[Default]), UsedName(==,[Default]), UsedName(setRef,[Default]), UsedName(getCommands,[Default]), UsedName(override_reset,[Default]), UsedName(rs1_ex,[Default]), UsedName(forceFinalName,[Default]), UsedName(_parent_=,[Default]), UsedName(initializeInParent,[Default]), UsedName(getIds,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(findPort,[Default]), UsedName(IO,[Default]), UsedName(ForwardingUnit,[Default]), UsedName(portsSize,[Default]), UsedName(reifyParent,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(hashCode,[Default]), UsedName(nameIds,[Default]), UsedName(rd_mem,[Default]), UsedName(pathName,[Default]), UsedName(override_clock,[Default]), UsedName(seedOpt,[Default]), UsedName(getOptionRef,[Default]), UsedName(_component,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(toTarget,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(addId,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(_namespace,[Default]), UsedName(##,[Default]), UsedName(suggestName,[Default]), UsedName(name,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(rv32i.core.ForwardingUnit)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.796147574 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
